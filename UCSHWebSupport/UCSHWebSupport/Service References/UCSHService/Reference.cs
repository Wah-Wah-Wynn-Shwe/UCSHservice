//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UCSHWebSupport.UCSHService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditLog", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class AuditLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionModuleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AffectedIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestedUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionModule {
            get {
                return this.ActionModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionModuleField, value) != true)) {
                    this.ActionModuleField = value;
                    this.RaisePropertyChanged("ActionModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AffectedID {
            get {
                return this.AffectedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AffectedIDField, value) != true)) {
                    this.AffectedIDField = value;
                    this.RaisePropertyChanged("AffectedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedData {
            get {
                return this.ModifiedDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedDataField, value) != true)) {
                    this.ModifiedDataField = value;
                    this.RaisePropertyChanged("ModifiedData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalData {
            get {
                return this.OriginalDataField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalDataField, value) != true)) {
                    this.OriginalDataField = value;
                    this.RaisePropertyChanged("OriginalData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestedUser {
            get {
                return this.RequestedUserField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestedUserField, value) != true)) {
                    this.RequestedUserField = value;
                    this.RaisePropertyChanged("RequestedUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApproveType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ApproveType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Major", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Major : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Semester", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Semester : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FromTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ToTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FromTime {
            get {
                return this.FromTimeField;
            }
            set {
                if ((this.FromTimeField.Equals(value) != true)) {
                    this.FromTimeField = value;
                    this.RaisePropertyChanged("FromTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ToTime {
            get {
                return this.ToTimeField;
            }
            set {
                if ((this.ToTimeField.Equals(value) != true)) {
                    this.ToTimeField = value;
                    this.RaisePropertyChanged("ToTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttendanceStatus", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class AttendanceStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authentication", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Authentication : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthenticationKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ErrorCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SuccessCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthenticationKey {
            get {
                return this.AuthenticationKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationKeyField, value) != true)) {
                    this.AuthenticationKeyField = value;
                    this.RaisePropertyChanged("AuthenticationKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ErrorCount {
            get {
                return this.ErrorCountField;
            }
            set {
                if ((this.ErrorCountField.Equals(value) != true)) {
                    this.ErrorCountField = value;
                    this.RaisePropertyChanged("ErrorCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuccessCount {
            get {
                return this.SuccessCountField;
            }
            set {
                if ((this.SuccessCountField.Equals(value) != true)) {
                    this.SuccessCountField = value;
                    this.RaisePropertyChanged("SuccessCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Class", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Class : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Major MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MajorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Years YearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearsIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Major Major {
            get {
                return this.MajorField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorField, value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MajorID {
            get {
                return this.MajorIDField;
            }
            set {
                if ((this.MajorIDField.Equals(value) != true)) {
                    this.MajorIDField = value;
                    this.RaisePropertyChanged("MajorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Years Years {
            get {
                return this.YearsField;
            }
            set {
                if ((object.ReferenceEquals(this.YearsField, value) != true)) {
                    this.YearsField = value;
                    this.RaisePropertyChanged("Years");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> YearsID {
            get {
                return this.YearsIDField;
            }
            set {
                if ((this.YearsIDField.Equals(value) != true)) {
                    this.YearsIDField = value;
                    this.RaisePropertyChanged("YearsID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Years", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Years : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DailyAttadanceSchedule", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DailyAttadanceSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AttDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.AttendanceStatus AttendanceStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AttendanceStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Semester SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SemesterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.TimeTableObject TimeTableObjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeTableObjectIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AttDateTime {
            get {
                return this.AttDateTimeField;
            }
            set {
                if ((this.AttDateTimeField.Equals(value) != true)) {
                    this.AttDateTimeField = value;
                    this.RaisePropertyChanged("AttDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.AttendanceStatus AttendanceStatus {
            get {
                return this.AttendanceStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceStatusField, value) != true)) {
                    this.AttendanceStatusField = value;
                    this.RaisePropertyChanged("AttendanceStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AttendanceStatusID {
            get {
                return this.AttendanceStatusIDField;
            }
            set {
                if ((this.AttendanceStatusIDField.Equals(value) != true)) {
                    this.AttendanceStatusIDField = value;
                    this.RaisePropertyChanged("AttendanceStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Semester Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SemesterID {
            get {
                return this.SemesterIDField;
            }
            set {
                if ((this.SemesterIDField.Equals(value) != true)) {
                    this.SemesterIDField = value;
                    this.RaisePropertyChanged("SemesterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.TimeTableObject TimeTableObject {
            get {
                return this.TimeTableObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeTableObjectField, value) != true)) {
                    this.TimeTableObjectField = value;
                    this.RaisePropertyChanged("TimeTableObject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeTableObjectID {
            get {
                return this.TimeTableObjectIDField;
            }
            set {
                if ((this.TimeTableObjectIDField.Equals(value) != true)) {
                    this.TimeTableObjectIDField = value;
                    this.RaisePropertyChanged("TimeTableObjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Authentication AuthenticationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthenticationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Class ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Major MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MajorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudentCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Authentication Authentication {
            get {
                return this.AuthenticationField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationField, value) != true)) {
                    this.AuthenticationField = value;
                    this.RaisePropertyChanged("Authentication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationID {
            get {
                return this.AuthenticationIDField;
            }
            set {
                if ((this.AuthenticationIDField.Equals(value) != true)) {
                    this.AuthenticationIDField = value;
                    this.RaisePropertyChanged("AuthenticationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Class Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageLocation {
            get {
                return this.ImageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLocationField, value) != true)) {
                    this.ImageLocationField = value;
                    this.RaisePropertyChanged("ImageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Major Major {
            get {
                return this.MajorField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorField, value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MajorID {
            get {
                return this.MajorIDField;
            }
            set {
                if ((this.MajorIDField.Equals(value) != true)) {
                    this.MajorIDField = value;
                    this.RaisePropertyChanged("MajorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudentCode {
            get {
                return this.StudentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentCodeField, value) != true)) {
                    this.StudentCodeField = value;
                    this.RaisePropertyChanged("StudentCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeTableObject", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TimeTableObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Class ClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ClassIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.DayInWeek DayInWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DayInWeekIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoomIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Semester SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SemesterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Subject SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Teacher TeacherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TeacherIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.TimePeriod TimePeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimePeriodIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Class Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ClassID {
            get {
                return this.ClassIDField;
            }
            set {
                if ((this.ClassIDField.Equals(value) != true)) {
                    this.ClassIDField = value;
                    this.RaisePropertyChanged("ClassID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.DayInWeek DayInWeek {
            get {
                return this.DayInWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayInWeekField, value) != true)) {
                    this.DayInWeekField = value;
                    this.RaisePropertyChanged("DayInWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DayInWeekID {
            get {
                return this.DayInWeekIDField;
            }
            set {
                if ((this.DayInWeekIDField.Equals(value) != true)) {
                    this.DayInWeekIDField = value;
                    this.RaisePropertyChanged("DayInWeekID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Semester Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SemesterID {
            get {
                return this.SemesterIDField;
            }
            set {
                if ((this.SemesterIDField.Equals(value) != true)) {
                    this.SemesterIDField = value;
                    this.RaisePropertyChanged("SemesterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Subject Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectID {
            get {
                return this.SubjectIDField;
            }
            set {
                if ((this.SubjectIDField.Equals(value) != true)) {
                    this.SubjectIDField = value;
                    this.RaisePropertyChanged("SubjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Teacher Teacher {
            get {
                return this.TeacherField;
            }
            set {
                if ((object.ReferenceEquals(this.TeacherField, value) != true)) {
                    this.TeacherField = value;
                    this.RaisePropertyChanged("Teacher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TeacherID {
            get {
                return this.TeacherIDField;
            }
            set {
                if ((this.TeacherIDField.Equals(value) != true)) {
                    this.TeacherIDField = value;
                    this.RaisePropertyChanged("TeacherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.TimePeriod TimePeriod {
            get {
                return this.TimePeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.TimePeriodField, value) != true)) {
                    this.TimePeriodField = value;
                    this.RaisePropertyChanged("TimePeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimePeriodID {
            get {
                return this.TimePeriodIDField;
            }
            set {
                if ((this.TimePeriodIDField.Equals(value) != true)) {
                    this.TimePeriodIDField = value;
                    this.RaisePropertyChanged("TimePeriodID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayInWeek", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DayInWeek : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccessRightCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string East_LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string East_LongtitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string North_LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string North_LongtitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string South_LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string South_LongtitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string West_LattitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string West_LongtitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessRightCode {
            get {
                return this.AccessRightCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessRightCodeField, value) != true)) {
                    this.AccessRightCodeField = value;
                    this.RaisePropertyChanged("AccessRightCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string East_Lattitude {
            get {
                return this.East_LattitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.East_LattitudeField, value) != true)) {
                    this.East_LattitudeField = value;
                    this.RaisePropertyChanged("East_Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string East_Longtitude {
            get {
                return this.East_LongtitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.East_LongtitudeField, value) != true)) {
                    this.East_LongtitudeField = value;
                    this.RaisePropertyChanged("East_Longtitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string North_Lattitude {
            get {
                return this.North_LattitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.North_LattitudeField, value) != true)) {
                    this.North_LattitudeField = value;
                    this.RaisePropertyChanged("North_Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string North_Longtitude {
            get {
                return this.North_LongtitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.North_LongtitudeField, value) != true)) {
                    this.North_LongtitudeField = value;
                    this.RaisePropertyChanged("North_Longtitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomCode {
            get {
                return this.RoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCodeField, value) != true)) {
                    this.RoomCodeField = value;
                    this.RaisePropertyChanged("RoomCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string South_Lattitude {
            get {
                return this.South_LattitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.South_LattitudeField, value) != true)) {
                    this.South_LattitudeField = value;
                    this.RaisePropertyChanged("South_Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string South_Longtitude {
            get {
                return this.South_LongtitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.South_LongtitudeField, value) != true)) {
                    this.South_LongtitudeField = value;
                    this.RaisePropertyChanged("South_Longtitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string West_Lattitude {
            get {
                return this.West_LattitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.West_LattitudeField, value) != true)) {
                    this.West_LattitudeField = value;
                    this.RaisePropertyChanged("West_Lattitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string West_Longtitude {
            get {
                return this.West_LongtitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.West_LongtitudeField, value) != true)) {
                    this.West_LongtitudeField = value;
                    this.RaisePropertyChanged("West_Longtitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Major MajorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MajorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Semester SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SemesterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.SubjectType SubjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Years YearsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> YearsIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Major Major {
            get {
                return this.MajorField;
            }
            set {
                if ((object.ReferenceEquals(this.MajorField, value) != true)) {
                    this.MajorField = value;
                    this.RaisePropertyChanged("Major");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MajorID {
            get {
                return this.MajorIDField;
            }
            set {
                if ((this.MajorIDField.Equals(value) != true)) {
                    this.MajorIDField = value;
                    this.RaisePropertyChanged("MajorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Semester Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SemesterID {
            get {
                return this.SemesterIDField;
            }
            set {
                if ((this.SemesterIDField.Equals(value) != true)) {
                    this.SemesterIDField = value;
                    this.RaisePropertyChanged("SemesterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectCode {
            get {
                return this.SubjectCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectCodeField, value) != true)) {
                    this.SubjectCodeField = value;
                    this.RaisePropertyChanged("SubjectCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.SubjectType SubjectType {
            get {
                return this.SubjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectTypeField, value) != true)) {
                    this.SubjectTypeField = value;
                    this.RaisePropertyChanged("SubjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectTypeID {
            get {
                return this.SubjectTypeIDField;
            }
            set {
                if ((this.SubjectTypeIDField.Equals(value) != true)) {
                    this.SubjectTypeIDField = value;
                    this.RaisePropertyChanged("SubjectTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Years Years {
            get {
                return this.YearsField;
            }
            set {
                if ((object.ReferenceEquals(this.YearsField, value) != true)) {
                    this.YearsField = value;
                    this.RaisePropertyChanged("Years");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> YearsID {
            get {
                return this.YearsIDField;
            }
            set {
                if ((this.YearsIDField.Equals(value) != true)) {
                    this.YearsIDField = value;
                    this.RaisePropertyChanged("YearsID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teacher", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Teacher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Authentication AuthenticationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AuthenticationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Department DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DepartmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Authentication Authentication {
            get {
                return this.AuthenticationField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationField, value) != true)) {
                    this.AuthenticationField = value;
                    this.RaisePropertyChanged("Authentication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthenticationID {
            get {
                return this.AuthenticationIDField;
            }
            set {
                if ((this.AuthenticationIDField.Equals(value) != true)) {
                    this.AuthenticationIDField = value;
                    this.RaisePropertyChanged("AuthenticationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Department Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DepartmentID {
            get {
                return this.DepartmentIDField;
            }
            set {
                if ((this.DepartmentIDField.Equals(value) != true)) {
                    this.DepartmentIDField = value;
                    this.RaisePropertyChanged("DepartmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimePeriod", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TimePeriod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromTime_HH_MMField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToTime_HH_MMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromTime_HH_MM {
            get {
                return this.FromTime_HH_MMField;
            }
            set {
                if ((object.ReferenceEquals(this.FromTime_HH_MMField, value) != true)) {
                    this.FromTime_HH_MMField = value;
                    this.RaisePropertyChanged("FromTime_HH_MM");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToTime_HH_MM {
            get {
                return this.ToTime_HH_MMField;
            }
            set {
                if ((object.ReferenceEquals(this.ToTime_HH_MMField, value) != true)) {
                    this.ToTime_HH_MMField = value;
                    this.RaisePropertyChanged("ToTime_HH_MM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubjectType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SubjectType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Department : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Division", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Division : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HolidayType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class HolidayType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HolidaySchedule", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class HolidaySchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.HolidayType HolidayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HolidayTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimeToField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DurationName {
            get {
                return this.DurationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationNameField, value) != true)) {
                    this.DurationNameField = value;
                    this.RaisePropertyChanged("DurationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.HolidayType HolidayType {
            get {
                return this.HolidayTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.HolidayTypeField, value) != true)) {
                    this.HolidayTypeField = value;
                    this.RaisePropertyChanged("HolidayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HolidayTypeID {
            get {
                return this.HolidayTypeIDField;
            }
            set {
                if ((this.HolidayTypeIDField.Equals(value) != true)) {
                    this.HolidayTypeIDField = value;
                    this.RaisePropertyChanged("HolidayTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeFrom {
            get {
                return this.TimeFromField;
            }
            set {
                if ((this.TimeFromField.Equals(value) != true)) {
                    this.TimeFromField = value;
                    this.RaisePropertyChanged("TimeFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TimeTo {
            get {
                return this.TimeToField;
            }
            set {
                if ((this.TimeToField.Equals(value) != true)) {
                    this.TimeToField = value;
                    this.RaisePropertyChanged("TimeTo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Member", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Member : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Authentication AuthenticationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthenticationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.MemberRole MemberRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MemberRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Authentication Authentication {
            get {
                return this.AuthenticationField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationField, value) != true)) {
                    this.AuthenticationField = value;
                    this.RaisePropertyChanged("Authentication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthenticationID {
            get {
                return this.AuthenticationIDField;
            }
            set {
                if ((this.AuthenticationIDField.Equals(value) != true)) {
                    this.AuthenticationIDField = value;
                    this.RaisePropertyChanged("AuthenticationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactInfo {
            get {
                return this.ContactInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactInfoField, value) != true)) {
                    this.ContactInfoField = value;
                    this.RaisePropertyChanged("ContactInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageLocation {
            get {
                return this.ImageLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageLocationField, value) != true)) {
                    this.ImageLocationField = value;
                    this.RaisePropertyChanged("ImageLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.MemberRole MemberRole {
            get {
                return this.MemberRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberRoleField, value) != true)) {
                    this.MemberRoleField = value;
                    this.RaisePropertyChanged("MemberRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MemberRoleID {
            get {
                return this.MemberRoleIDField;
            }
            set {
                if ((this.MemberRoleIDField.Equals(value) != true)) {
                    this.MemberRoleIDField = value;
                    this.RaisePropertyChanged("MemberRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberRole", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MemberRole : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberPermission", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MemberPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.MemberRole MemberRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MemberRoleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.PermissionMaster PermissionMasterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PermissionMasterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Allowed {
            get {
                return this.AllowedField;
            }
            set {
                if ((this.AllowedField.Equals(value) != true)) {
                    this.AllowedField = value;
                    this.RaisePropertyChanged("Allowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.MemberRole MemberRole {
            get {
                return this.MemberRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberRoleField, value) != true)) {
                    this.MemberRoleField = value;
                    this.RaisePropertyChanged("MemberRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MemberRoleID {
            get {
                return this.MemberRoleIDField;
            }
            set {
                if ((this.MemberRoleIDField.Equals(value) != true)) {
                    this.MemberRoleIDField = value;
                    this.RaisePropertyChanged("MemberRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.PermissionMaster PermissionMaster {
            get {
                return this.PermissionMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionMasterField, value) != true)) {
                    this.PermissionMasterField = value;
                    this.RaisePropertyChanged("PermissionMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PermissionMasterID {
            get {
                return this.PermissionMasterIDField;
            }
            set {
                if ((this.PermissionMasterIDField.Equals(value) != true)) {
                    this.PermissionMasterIDField = value;
                    this.RaisePropertyChanged("PermissionMasterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionName {
            get {
                return this.PermissionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionNameField, value) != true)) {
                    this.PermissionNameField = value;
                    this.RaisePropertyChanged("PermissionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionMaster", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class PermissionMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthlyAttadanceSchedule", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MonthlyAttadanceSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AttDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentAttandancePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfAbsentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfAttandanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Semester SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SemesterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AttDateTime {
            get {
                return this.AttDateTimeField;
            }
            set {
                if ((this.AttDateTimeField.Equals(value) != true)) {
                    this.AttDateTimeField = value;
                    this.RaisePropertyChanged("AttDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentAttandancePercent {
            get {
                return this.CurrentAttandancePercentField;
            }
            set {
                if ((this.CurrentAttandancePercentField.Equals(value) != true)) {
                    this.CurrentAttandancePercentField = value;
                    this.RaisePropertyChanged("CurrentAttandancePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfAbsent {
            get {
                return this.NumberOfAbsentField;
            }
            set {
                if ((this.NumberOfAbsentField.Equals(value) != true)) {
                    this.NumberOfAbsentField = value;
                    this.RaisePropertyChanged("NumberOfAbsent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfAttandance {
            get {
                return this.NumberOfAttandanceField;
            }
            set {
                if ((this.NumberOfAttandanceField.Equals(value) != true)) {
                    this.NumberOfAttandanceField = value;
                    this.RaisePropertyChanged("NumberOfAttandance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Semester Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SemesterID {
            get {
                return this.SemesterIDField;
            }
            set {
                if ((this.SemesterIDField.Equals(value) != true)) {
                    this.SemesterIDField = value;
                    this.RaisePropertyChanged("SemesterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestList", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class RequestList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastRequestDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MACAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Member MemberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MemberIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestByHostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastRequestDateTime {
            get {
                return this.LastRequestDateTimeField;
            }
            set {
                if ((this.LastRequestDateTimeField.Equals(value) != true)) {
                    this.LastRequestDateTimeField = value;
                    this.RaisePropertyChanged("LastRequestDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACAddress {
            get {
                return this.MACAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.MACAddressField, value) != true)) {
                    this.MACAddressField = value;
                    this.RaisePropertyChanged("MACAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineKey {
            get {
                return this.MachineKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineKeyField, value) != true)) {
                    this.MachineKeyField = value;
                    this.RaisePropertyChanged("MachineKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Member Member {
            get {
                return this.MemberField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberField, value) != true)) {
                    this.MemberField = value;
                    this.RaisePropertyChanged("Member");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MemberID {
            get {
                return this.MemberIDField;
            }
            set {
                if ((this.MemberIDField.Equals(value) != true)) {
                    this.MemberIDField = value;
                    this.RaisePropertyChanged("MemberID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequestByHostName {
            get {
                return this.RequestByHostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestByHostNameField, value) != true)) {
                    this.RequestByHostNameField = value;
                    this.RaisePropertyChanged("RequestByHostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestedCount {
            get {
                return this.RequestedCountField;
            }
            set {
                if ((this.RequestedCountField.Equals(value) != true)) {
                    this.RequestedCountField = value;
                    this.RaisePropertyChanged("RequestedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAccessRight", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ServiceAccessRight : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RoomIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionLevel {
            get {
                return this.PermissionLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionLevelField, value) != true)) {
                    this.PermissionLevelField = value;
                    this.RaisePropertyChanged("PermissionLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RoomID {
            get {
                return this.RoomIDField;
            }
            set {
                if ((this.RoomIDField.Equals(value) != true)) {
                    this.RoomIDField = value;
                    this.RaisePropertyChanged("RoomID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Township", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Township : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Division DivisionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DivisionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Division Division {
            get {
                return this.DivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionField, value) != true)) {
                    this.DivisionField = value;
                    this.RaisePropertyChanged("Division");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DivisionID {
            get {
                return this.DivisionIDField;
            }
            set {
                if ((this.DivisionIDField.Equals(value) != true)) {
                    this.DivisionIDField = value;
                    this.RaisePropertyChanged("DivisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnabilableApproveList", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UnabilableApproveList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ApprovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AttDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.DailyAttadanceSchedule DailyAttadanceScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DailyAttadanceScheduleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.RequestList RequestListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RequestListIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AttDateTime {
            get {
                return this.AttDateTimeField;
            }
            set {
                if ((this.AttDateTimeField.Equals(value) != true)) {
                    this.AttDateTimeField = value;
                    this.RaisePropertyChanged("AttDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.DailyAttadanceSchedule DailyAttadanceSchedule {
            get {
                return this.DailyAttadanceScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.DailyAttadanceScheduleField, value) != true)) {
                    this.DailyAttadanceScheduleField = value;
                    this.RaisePropertyChanged("DailyAttadanceSchedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DailyAttadanceScheduleID {
            get {
                return this.DailyAttadanceScheduleIDField;
            }
            set {
                if ((this.DailyAttadanceScheduleIDField.Equals(value) != true)) {
                    this.DailyAttadanceScheduleIDField = value;
                    this.RaisePropertyChanged("DailyAttadanceScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.RequestList RequestList {
            get {
                return this.RequestListField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestListField, value) != true)) {
                    this.RequestListField = value;
                    this.RaisePropertyChanged("RequestList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RequestListID {
            get {
                return this.RequestListIDField;
            }
            set {
                if ((this.RequestListIDField.Equals(value) != true)) {
                    this.RequestListIDField = value;
                    this.RaisePropertyChanged("RequestListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="University", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class University : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Township TownshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TownshipIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Township Township {
            get {
                return this.TownshipField;
            }
            set {
                if ((object.ReferenceEquals(this.TownshipField, value) != true)) {
                    this.TownshipField = value;
                    this.RaisePropertyChanged("Township");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TownshipID {
            get {
                return this.TownshipIDField;
            }
            set {
                if ((this.TownshipIDField.Equals(value) != true)) {
                    this.TownshipIDField = value;
                    this.RaisePropertyChanged("TownshipID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="YearlyAttadanceSchedule", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class YearlyAttadanceSchedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AttDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentAttandancePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfAbsentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberOfAttandanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Semester SemesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SemesterIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private UCSHWebSupport.UCSHService.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StudentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AttDateTime {
            get {
                return this.AttDateTimeField;
            }
            set {
                if ((this.AttDateTimeField.Equals(value) != true)) {
                    this.AttDateTimeField = value;
                    this.RaisePropertyChanged("AttDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CurrentAttandancePercent {
            get {
                return this.CurrentAttandancePercentField;
            }
            set {
                if ((this.CurrentAttandancePercentField.Equals(value) != true)) {
                    this.CurrentAttandancePercentField = value;
                    this.RaisePropertyChanged("CurrentAttandancePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((this.ModifiedOnField.Equals(value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfAbsent {
            get {
                return this.NumberOfAbsentField;
            }
            set {
                if ((this.NumberOfAbsentField.Equals(value) != true)) {
                    this.NumberOfAbsentField = value;
                    this.RaisePropertyChanged("NumberOfAbsent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberOfAttandance {
            get {
                return this.NumberOfAttandanceField;
            }
            set {
                if ((this.NumberOfAttandanceField.Equals(value) != true)) {
                    this.NumberOfAttandanceField = value;
                    this.RaisePropertyChanged("NumberOfAttandance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Semester Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SemesterID {
            get {
                return this.SemesterIDField;
            }
            set {
                if ((this.SemesterIDField.Equals(value) != true)) {
                    this.SemesterIDField = value;
                    this.RaisePropertyChanged("SemesterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UCSHWebSupport.UCSHService.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StudentID {
            get {
                return this.StudentIDField;
            }
            set {
                if ((this.StudentIDField.Equals(value) != true)) {
                    this.StudentIDField = value;
                    this.RaisePropertyChanged("StudentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UCSHService.IUCSHService")]
    public interface IUCSHService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAuditLog", ReplyAction="http://tempuri.org/IUCSHService/GetAuditLogResponse")]
        UCSHWebSupport.UCSHService.AuditLog[] GetAuditLog(string RequestByIP, string AuthenticationCode, string AuditLogID, string TableName, string ColumnName, string AffectedID, string RequestedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAuditLog", ReplyAction="http://tempuri.org/IUCSHService/GetAuditLogResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.AuditLog[]> GetAuditLogAsync(string RequestByIP, string AuthenticationCode, string AuditLogID, string TableName, string ColumnName, string AffectedID, string RequestedUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetApproveType", ReplyAction="http://tempuri.org/IUCSHService/GetApproveTypeResponse")]
        UCSHWebSupport.UCSHService.ApproveType[] GetApproveType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetApproveType", ReplyAction="http://tempuri.org/IUCSHService/GetApproveTypeResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.ApproveType[]> GetApproveTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMajor", ReplyAction="http://tempuri.org/IUCSHService/GetMajorResponse")]
        UCSHWebSupport.UCSHService.Major[] GetMajor(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMajor", ReplyAction="http://tempuri.org/IUCSHService/GetMajorResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Major[]> GetMajorAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSemester", ReplyAction="http://tempuri.org/IUCSHService/GetSemesterResponse")]
        UCSHWebSupport.UCSHService.Semester[] GetSemester(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSemester", ReplyAction="http://tempuri.org/IUCSHService/GetSemesterResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Semester[]> GetSemesterAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAttendanceStatus", ReplyAction="http://tempuri.org/IUCSHService/GetAttendanceStatusResponse")]
        UCSHWebSupport.UCSHService.AttendanceStatus[] GetAttendanceStatus(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAttendanceStatus", ReplyAction="http://tempuri.org/IUCSHService/GetAttendanceStatusResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.AttendanceStatus[]> GetAttendanceStatusAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAuthentication", ReplyAction="http://tempuri.org/IUCSHService/GetAuthenticationResponse")]
        UCSHWebSupport.UCSHService.Authentication[] GetAuthentication(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string MinSuccessCount, string MaxSuccessCount, string MinErrorCount, string MaxErrorCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetAuthentication", ReplyAction="http://tempuri.org/IUCSHService/GetAuthenticationResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Authentication[]> GetAuthenticationAsync(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string MinSuccessCount, string MaxSuccessCount, string MinErrorCount, string MaxErrorCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetClass", ReplyAction="http://tempuri.org/IUCSHService/GetClassResponse")]
        UCSHWebSupport.UCSHService.Class[] GetClass(string RequestByIP, string AuthenticationCode, string ID, string Name, string MajorID, string YearID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetClass", ReplyAction="http://tempuri.org/IUCSHService/GetClassResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Class[]> GetClassAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string MajorID, string YearID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDailyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetDailyAttadanceResponse")]
        UCSHWebSupport.UCSHService.DailyAttadanceSchedule[] GetDailyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDailyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetDailyAttadanceResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.DailyAttadanceSchedule[]> GetDailyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDayInWeek", ReplyAction="http://tempuri.org/IUCSHService/GetDayInWeekResponse")]
        UCSHWebSupport.UCSHService.DayInWeek[] GetDayInWeek(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDayInWeek", ReplyAction="http://tempuri.org/IUCSHService/GetDayInWeekResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.DayInWeek[]> GetDayInWeekAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDepartment", ReplyAction="http://tempuri.org/IUCSHService/GetDepartmentResponse")]
        UCSHWebSupport.UCSHService.Department[] GetDepartment(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDepartment", ReplyAction="http://tempuri.org/IUCSHService/GetDepartmentResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Department[]> GetDepartmentAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDivision", ReplyAction="http://tempuri.org/IUCSHService/GetDivisionResponse")]
        UCSHWebSupport.UCSHService.Division[] GetDivision(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetDivision", ReplyAction="http://tempuri.org/IUCSHService/GetDivisionResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Division[]> GetDivisionAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetHolidayType", ReplyAction="http://tempuri.org/IUCSHService/GetHolidayTypeResponse")]
        UCSHWebSupport.UCSHService.HolidayType[] GetHolidayType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetHolidayType", ReplyAction="http://tempuri.org/IUCSHService/GetHolidayTypeResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.HolidayType[]> GetHolidayTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetHolidaySchedule", ReplyAction="http://tempuri.org/IUCSHService/GetHolidayScheduleResponse")]
        UCSHWebSupport.UCSHService.HolidaySchedule[] GetHolidaySchedule(string RequestByIP, string AuthenticationCode, string ID, string Name, string TypeID, string FromDateTime, string ToDateTime, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetHolidaySchedule", ReplyAction="http://tempuri.org/IUCSHService/GetHolidayScheduleResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.HolidaySchedule[]> GetHolidayScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string TypeID, string FromDateTime, string ToDateTime, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMember", ReplyAction="http://tempuri.org/IUCSHService/GetMemberResponse")]
        UCSHWebSupport.UCSHService.Member[] GetMember(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string Email, string AuthenticationID, string MemberRoleID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMember", ReplyAction="http://tempuri.org/IUCSHService/GetMemberResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Member[]> GetMemberAsync(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string Email, string AuthenticationID, string MemberRoleID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMemberPermission", ReplyAction="http://tempuri.org/IUCSHService/GetMemberPermissionResponse")]
        UCSHWebSupport.UCSHService.MemberPermission[] GetMemberPermission(string RequestByIP, string AuthenticationCode, string ID, string MemberRoleID, string PermissionMasterID, string Allowed, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMemberPermission", ReplyAction="http://tempuri.org/IUCSHService/GetMemberPermissionResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MemberPermission[]> GetMemberPermissionAsync(string RequestByIP, string AuthenticationCode, string ID, string MemberRoleID, string PermissionMasterID, string Allowed, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMemberRole", ReplyAction="http://tempuri.org/IUCSHService/GetMemberRoleResponse")]
        UCSHWebSupport.UCSHService.MemberRole[] GetMemberRole(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMemberRole", ReplyAction="http://tempuri.org/IUCSHService/GetMemberRoleResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MemberRole[]> GetMemberRoleAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMonthlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetMonthlyAttadanceResponse")]
        UCSHWebSupport.UCSHService.MonthlyAttadanceSchedule[] GetMonthlyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetMonthlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetMonthlyAttadanceResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MonthlyAttadanceSchedule[]> GetMonthlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetPermissionMaster", ReplyAction="http://tempuri.org/IUCSHService/GetPermissionMasterResponse")]
        UCSHWebSupport.UCSHService.PermissionMaster[] GetPermissionMaster(string RequestByIP, string AuthenticationCode, string ID, string Name, string Value, string ParentID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetPermissionMaster", ReplyAction="http://tempuri.org/IUCSHService/GetPermissionMasterResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.PermissionMaster[]> GetPermissionMasterAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Value, string ParentID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetRequestList", ReplyAction="http://tempuri.org/IUCSHService/GetRequestListResponse")]
        UCSHWebSupport.UCSHService.RequestList[] GetRequestList(string RequestByIP, string AuthenticationCode, string ID, string RequestByHostName, string MachineKey, string MACAddrress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetRequestList", ReplyAction="http://tempuri.org/IUCSHService/GetRequestListResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.RequestList[]> GetRequestListAsync(string RequestByIP, string AuthenticationCode, string ID, string RequestByHostName, string MachineKey, string MACAddrress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetRoom", ReplyAction="http://tempuri.org/IUCSHService/GetRoomResponse")]
        UCSHWebSupport.UCSHService.Room[] GetRoom(string RequestByIP, string AuthenticationCode, string ID, string Name, string Code, string AccessRightCode, string North_Lattitude, string North_Longtitude, string South_Lattitude, string South_Longtitude, string East_Lattitude, string East_Longtitude, string West_Lattitude, string West_Longtitude, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetRoom", ReplyAction="http://tempuri.org/IUCSHService/GetRoomResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Room[]> GetRoomAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Code, string AccessRightCode, string North_Lattitude, string North_Longtitude, string South_Lattitude, string South_Longtitude, string East_Lattitude, string East_Longtitude, string West_Lattitude, string West_Longtitude, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetServiceAccessRight", ReplyAction="http://tempuri.org/IUCSHService/GetServiceAccessRightResponse")]
        UCSHWebSupport.UCSHService.ServiceAccessRight[] GetServiceAccessRight(string RequestByIP, string AuthenticationCode, string ID, string Password, string PermissionLevel, string RoomID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetServiceAccessRight", ReplyAction="http://tempuri.org/IUCSHService/GetServiceAccessRightResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.ServiceAccessRight[]> GetServiceAccessRightAsync(string RequestByIP, string AuthenticationCode, string ID, string Password, string PermissionLevel, string RoomID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetStudent", ReplyAction="http://tempuri.org/IUCSHService/GetStudentResponse")]
        UCSHWebSupport.UCSHService.Student[] GetStudent(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string StudentCode, string Email, string MajorID, string AuthenticationID, string ClassID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetStudent", ReplyAction="http://tempuri.org/IUCSHService/GetStudentResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Student[]> GetStudentAsync(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string StudentCode, string Email, string MajorID, string AuthenticationID, string ClassID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSubject", ReplyAction="http://tempuri.org/IUCSHService/GetSubjectResponse")]
        UCSHWebSupport.UCSHService.Subject[] GetSubject(string RequestByIP, string AuthenticationCode, string ID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSubject", ReplyAction="http://tempuri.org/IUCSHService/GetSubjectResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Subject[]> GetSubjectAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSubjectType", ReplyAction="http://tempuri.org/IUCSHService/GetSubjectTypeResponse")]
        UCSHWebSupport.UCSHService.SubjectType[] GetSubjectType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetSubjectType", ReplyAction="http://tempuri.org/IUCSHService/GetSubjectTypeResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.SubjectType[]> GetSubjectTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTeacher", ReplyAction="http://tempuri.org/IUCSHService/GetTeacherResponse")]
        UCSHWebSupport.UCSHService.Teacher[] GetTeacher(string RequestByIP, string AuthenticationCode, string ID, string Name, string DepartmentID, string Email, string AuthenticateID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTeacher", ReplyAction="http://tempuri.org/IUCSHService/GetTeacherResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Teacher[]> GetTeacherAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string DepartmentID, string Email, string AuthenticateID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTimePeriod", ReplyAction="http://tempuri.org/IUCSHService/GetTimePeriodResponse")]
        UCSHWebSupport.UCSHService.TimePeriod[] GetTimePeriod(string RequestByIP, string AuthenticationCode, string ID, string Name, string FromTime, string ToTime, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTimePeriod", ReplyAction="http://tempuri.org/IUCSHService/GetTimePeriodResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.TimePeriod[]> GetTimePeriodAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string FromTime, string ToTime, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/GetTimeTableObjectResponse")]
        UCSHWebSupport.UCSHService.TimeTableObject[] GetTimeTableObject(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/GetTimeTableObjectResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.TimeTableObject[]> GetTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTownship", ReplyAction="http://tempuri.org/IUCSHService/GetTownshipResponse")]
        UCSHWebSupport.UCSHService.Township[] GetTownship(string RequestByIP, string AuthenticationCode, string ID, string Name, string DivisionID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetTownship", ReplyAction="http://tempuri.org/IUCSHService/GetTownshipResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Township[]> GetTownshipAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string DivisionID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/GetUnabilableApproveListResponse")]
        UCSHWebSupport.UCSHService.UnabilableApproveList[] GetUnabilableApproveList(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Approved, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/GetUnabilableApproveListResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.UnabilableApproveList[]> GetUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Approved, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetUniversity", ReplyAction="http://tempuri.org/IUCSHService/GetUniversityResponse")]
        UCSHWebSupport.UCSHService.University[] GetUniversity(string RequestByIP, string AuthenticationCode, string ID, string Name, string TownshipID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetUniversity", ReplyAction="http://tempuri.org/IUCSHService/GetUniversityResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.University[]> GetUniversityAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string TownshipID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetYearlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetYearlyAttadanceResponse")]
        UCSHWebSupport.UCSHService.YearlyAttadanceSchedule[] GetYearlyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetYearlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/GetYearlyAttadanceResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.YearlyAttadanceSchedule[]> GetYearlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetYears", ReplyAction="http://tempuri.org/IUCSHService/GetYearsResponse")]
        UCSHWebSupport.UCSHService.Years[] GetYears(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetYears", ReplyAction="http://tempuri.org/IUCSHService/GetYearsResponse")]
        System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Years[]> GetYearsAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDivision", ReplyAction="http://tempuri.org/IUCSHService/WriteDivisionResponse")]
        bool WriteDivision(string RequestByIP, string AuthenticationCode, string DivisionID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDivision", ReplyAction="http://tempuri.org/IUCSHService/WriteDivisionResponse")]
        System.Threading.Tasks.Task<bool> WriteDivisionAsync(string RequestByIP, string AuthenticationCode, string DivisionID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMajor", ReplyAction="http://tempuri.org/IUCSHService/WriteMajorResponse")]
        bool WriteMajor(string RequestByIP, string AuthenticationCode, string MajorID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMajor", ReplyAction="http://tempuri.org/IUCSHService/WriteMajorResponse")]
        System.Threading.Tasks.Task<bool> WriteMajorAsync(string RequestByIP, string AuthenticationCode, string MajorID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMemberRole", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberRoleResponse")]
        bool WriteMemberRole(string RequestByIP, string AuthenticationCode, string MemberRoleID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMemberRole", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberRoleResponse")]
        System.Threading.Tasks.Task<bool> WriteMemberRoleAsync(string RequestByIP, string AuthenticationCode, string MemberRoleID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMember", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberResponse")]
        bool WriteMember(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ImageLocation, string ContactInfo, string Email, string AuthenticationID, string MemberRoleID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMember", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberResponse")]
        System.Threading.Tasks.Task<bool> WriteMemberAsync(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ImageLocation, string ContactInfo, string Email, string AuthenticationID, string MemberRoleID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMemberPermission", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberPermissionResponse")]
        bool WriteMemberPermission(string RequestByIP, string AuthenticationCode, string MemberPermissionID, string MemberRoleID, string PermissionMasterID, string PermissionName, string Allowed, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMemberPermission", ReplyAction="http://tempuri.org/IUCSHService/WriteMemberPermissionResponse")]
        System.Threading.Tasks.Task<bool> WriteMemberPermissionAsync(string RequestByIP, string AuthenticationCode, string MemberPermissionID, string MemberRoleID, string PermissionMasterID, string PermissionName, string Allowed, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteApproveType", ReplyAction="http://tempuri.org/IUCSHService/WriteApproveTypeResponse")]
        bool WriteApproveType(string RequestByIP, string AuthenticationCode, string ApproveTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteApproveType", ReplyAction="http://tempuri.org/IUCSHService/WriteApproveTypeResponse")]
        System.Threading.Tasks.Task<bool> WriteApproveTypeAsync(string RequestByIP, string AuthenticationCode, string ApproveTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteAttendanceStatus", ReplyAction="http://tempuri.org/IUCSHService/WriteAttendanceStatusResponse")]
        bool WriteAttendanceStatus(string RequestByIP, string AuthenticationCode, string AttendanceStatusID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteAttendanceStatus", ReplyAction="http://tempuri.org/IUCSHService/WriteAttendanceStatusResponse")]
        System.Threading.Tasks.Task<bool> WriteAttendanceStatusAsync(string RequestByIP, string AuthenticationCode, string AttendanceStatusID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteAuthentication", ReplyAction="http://tempuri.org/IUCSHService/WriteAuthenticationResponse")]
        bool WriteAuthentication(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string SuccessCount, string ErrorCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteAuthentication", ReplyAction="http://tempuri.org/IUCSHService/WriteAuthenticationResponse")]
        System.Threading.Tasks.Task<bool> WriteAuthenticationAsync(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string SuccessCount, string ErrorCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteClass", ReplyAction="http://tempuri.org/IUCSHService/WriteClassResponse")]
        bool WriteClass(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteClass", ReplyAction="http://tempuri.org/IUCSHService/WriteClassResponse")]
        System.Threading.Tasks.Task<bool> WriteClassAsync(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDailyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteDailyAttadanceResponse")]
        bool WriteDailyAttadance(string RequestByIP, string AuthenticationCode, string DailyAttadanceID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDailyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteDailyAttadanceResponse")]
        System.Threading.Tasks.Task<bool> WriteDailyAttadanceAsync(string RequestByIP, string AuthenticationCode, string DailyAttadanceID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDayInWeek", ReplyAction="http://tempuri.org/IUCSHService/WriteDayInWeekResponse")]
        bool WriteDayInWeek(string RequestByIP, string AuthenticationCode, string DayInWeekID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDayInWeek", ReplyAction="http://tempuri.org/IUCSHService/WriteDayInWeekResponse")]
        System.Threading.Tasks.Task<bool> WriteDayInWeekAsync(string RequestByIP, string AuthenticationCode, string DayInWeekID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDepartment", ReplyAction="http://tempuri.org/IUCSHService/WriteDepartmentResponse")]
        bool WriteDepartment(string RequestByIP, string AuthenticationCode, string DepartmentID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteDepartment", ReplyAction="http://tempuri.org/IUCSHService/WriteDepartmentResponse")]
        System.Threading.Tasks.Task<bool> WriteDepartmentAsync(string RequestByIP, string AuthenticationCode, string DepartmentID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteHolidayType", ReplyAction="http://tempuri.org/IUCSHService/WriteHolidayTypeResponse")]
        bool WriteHolidayType(string RequestByIP, string AuthenticationCode, string HolidayTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteHolidayType", ReplyAction="http://tempuri.org/IUCSHService/WriteHolidayTypeResponse")]
        System.Threading.Tasks.Task<bool> WriteHolidayTypeAsync(string RequestByIP, string AuthenticationCode, string HolidayTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMonthlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteMonthlyAttadanceResponse")]
        bool WriteMonthlyAttadance(string RequestByIP, string AuthenticationCode, string MonthlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteMonthlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteMonthlyAttadanceResponse")]
        System.Threading.Tasks.Task<bool> WriteMonthlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string MonthlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WritePermissionMaster", ReplyAction="http://tempuri.org/IUCSHService/WritePermissionMasterResponse")]
        bool WritePermissionMaster(string RequestByIP, string AuthenticationCode, string PermissionMasterID, string Name, string Value, string ParentID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WritePermissionMaster", ReplyAction="http://tempuri.org/IUCSHService/WritePermissionMasterResponse")]
        System.Threading.Tasks.Task<bool> WritePermissionMasterAsync(string RequestByIP, string AuthenticationCode, string PermissionMasterID, string Name, string Value, string ParentID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteRequestList", ReplyAction="http://tempuri.org/IUCSHService/WriteRequestListResponse")]
        bool WriteRequestList(string RequestByIP, string AuthenticationCode, string RequestListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteRequestList", ReplyAction="http://tempuri.org/IUCSHService/WriteRequestListResponse")]
        System.Threading.Tasks.Task<bool> WriteRequestListAsync(string RequestByIP, string AuthenticationCode, string RequestListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteRoom", ReplyAction="http://tempuri.org/IUCSHService/WriteRoomResponse")]
        bool WriteRoom(
                    string RequestByIP, 
                    string AuthenticationCode, 
                    string RoomID, 
                    string Name, 
                    string RoomCode, 
                    string AccessRightCode, 
                    string North_Lattitude, 
                    string North_Longtitude, 
                    string South_Lattitude, 
                    string South_Longtitude, 
                    string East_Lattitude, 
                    string East_Longtitude, 
                    string West_Lattitude, 
                    string West_Longtitude, 
                    string Description, 
                    string ModifiedBy, 
                    string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteRoom", ReplyAction="http://tempuri.org/IUCSHService/WriteRoomResponse")]
        System.Threading.Tasks.Task<bool> WriteRoomAsync(
                    string RequestByIP, 
                    string AuthenticationCode, 
                    string RoomID, 
                    string Name, 
                    string RoomCode, 
                    string AccessRightCode, 
                    string North_Lattitude, 
                    string North_Longtitude, 
                    string South_Lattitude, 
                    string South_Longtitude, 
                    string East_Lattitude, 
                    string East_Longtitude, 
                    string West_Lattitude, 
                    string West_Longtitude, 
                    string Description, 
                    string ModifiedBy, 
                    string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteStudent", ReplyAction="http://tempuri.org/IUCSHService/WriteStudentResponse")]
        bool WriteStudent(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string StudentCode, string ImageLocation, string Email, string MajorID, string ContactInfo, string AuthenticationID, string ClassID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteStudent", ReplyAction="http://tempuri.org/IUCSHService/WriteStudentResponse")]
        System.Threading.Tasks.Task<bool> WriteStudentAsync(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string StudentCode, string ImageLocation, string Email, string MajorID, string ContactInfo, string AuthenticationID, string ClassID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteSubject", ReplyAction="http://tempuri.org/IUCSHService/WriteSubjectResponse")]
        bool WriteSubject(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string MajorID, string SemesterID, string YearsID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteSubject", ReplyAction="http://tempuri.org/IUCSHService/WriteSubjectResponse")]
        System.Threading.Tasks.Task<bool> WriteSubjectAsync(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string MajorID, string SemesterID, string YearsID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteSubjectType", ReplyAction="http://tempuri.org/IUCSHService/WriteSubjectTypeResponse")]
        bool WriteSubjectType(string RequestByIP, string AuthenticationCode, string SubjectTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteSubjectType", ReplyAction="http://tempuri.org/IUCSHService/WriteSubjectTypeResponse")]
        System.Threading.Tasks.Task<bool> WriteSubjectTypeAsync(string RequestByIP, string AuthenticationCode, string SubjectTypeID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTeacher", ReplyAction="http://tempuri.org/IUCSHService/WriteTeacherResponse")]
        bool WriteTeacher(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string Email, string AuthenticateID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTeacher", ReplyAction="http://tempuri.org/IUCSHService/WriteTeacherResponse")]
        System.Threading.Tasks.Task<bool> WriteTeacherAsync(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string Email, string AuthenticateID, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTimePeriod", ReplyAction="http://tempuri.org/IUCSHService/WriteTimePeriodResponse")]
        bool WriteTimePeriod(string RequestByIP, string AuthenticationCode, string TimePeriodID, string Name, string FromTime, string ToTime, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTimePeriod", ReplyAction="http://tempuri.org/IUCSHService/WriteTimePeriodResponse")]
        System.Threading.Tasks.Task<bool> WriteTimePeriodAsync(string RequestByIP, string AuthenticationCode, string TimePeriodID, string Name, string FromTime, string ToTime, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/WriteTimeTableObjectResponse")]
        bool WriteTimeTableObject(string RequestByIP, string AuthenticationCode, string TimeTableObjectID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/WriteTimeTableObjectResponse")]
        System.Threading.Tasks.Task<bool> WriteTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string TimeTableObjectID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTownship", ReplyAction="http://tempuri.org/IUCSHService/WriteTownshipResponse")]
        bool WriteTownship(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string DivisionID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteTownship", ReplyAction="http://tempuri.org/IUCSHService/WriteTownshipResponse")]
        System.Threading.Tasks.Task<bool> WriteTownshipAsync(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string DivisionID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/WriteUnabilableApproveListResponse")]
        bool WriteUnabilableApproveList(string RequestByIP, string AuthenticationCode, string UnabilableApproveListID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/WriteUnabilableApproveListResponse")]
        System.Threading.Tasks.Task<bool> WriteUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string UnabilableApproveListID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteYearlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteYearlyAttadanceResponse")]
        bool WriteYearlyAttadance(string RequestByIP, string AuthenticationCode, string YearlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteYearlyAttadance", ReplyAction="http://tempuri.org/IUCSHService/WriteYearlyAttadanceResponse")]
        System.Threading.Tasks.Task<bool> WriteYearlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string YearlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteYear", ReplyAction="http://tempuri.org/IUCSHService/WriteYearResponse")]
        bool WriteYear(string RequestByIP, string AuthenticationCode, string YearID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/WriteYear", ReplyAction="http://tempuri.org/IUCSHService/WriteYearResponse")]
        System.Threading.Tasks.Task<bool> WriteYearAsync(string RequestByIP, string AuthenticationCode, string YearID, string Name, string Description, string ModifiedBy, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTownship", ReplyAction="http://tempuri.org/IUCSHService/GetFullTownshipResponse")]
        System.Data.DataTable GetFullTownship(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string Description, string DivisionID, string DivisionName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTownship", ReplyAction="http://tempuri.org/IUCSHService/GetFullTownshipResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullTownshipAsync(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string Description, string DivisionID, string DivisionName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullClass", ReplyAction="http://tempuri.org/IUCSHService/GetFullClassResponse")]
        System.Data.DataTable GetFullClass(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearsID, string YearsName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullClass", ReplyAction="http://tempuri.org/IUCSHService/GetFullClassResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullClassAsync(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearsID, string YearsName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullHolidaySchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullHolidayScheduleResponse")]
        System.Data.DataTable GetFullHolidaySchedule(string RequestByIP, string AuthenticationCode, string HolidayScheduleID, string Name, string FromTime, string ToTime, string HolidayTypeID, string HolidayTypeName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullHolidaySchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullHolidayScheduleResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullHolidayScheduleAsync(string RequestByIP, string AuthenticationCode, string HolidayScheduleID, string Name, string FromTime, string ToTime, string HolidayTypeID, string HolidayTypeName, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullDailyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullDailyAttadanceScheduleResponse")]
        System.Data.DataTable GetFullDailyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullDailyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullDailyAttadanceScheduleResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullDailyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullMember", ReplyAction="http://tempuri.org/IUCSHService/GetFullMemberResponse")]
        System.Data.DataTable GetFullMember(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ContactInfo, string MemberRoleID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullMember", ReplyAction="http://tempuri.org/IUCSHService/GetFullMemberResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullMemberAsync(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ContactInfo, string MemberRoleID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullStudent", ReplyAction="http://tempuri.org/IUCSHService/GetFullStudentResponse")]
        System.Data.DataTable GetFullStudent(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string MajorID, string ContactInfo, string ClassID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullStudent", ReplyAction="http://tempuri.org/IUCSHService/GetFullStudentResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullStudentAsync(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string MajorID, string ContactInfo, string ClassID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullSubject", ReplyAction="http://tempuri.org/IUCSHService/GetFullSubjectResponse")]
        System.Data.DataTable GetFullSubject(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullSubject", ReplyAction="http://tempuri.org/IUCSHService/GetFullSubjectResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullSubjectAsync(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTeacher", ReplyAction="http://tempuri.org/IUCSHService/GetFullTeacherResponse")]
        System.Data.DataTable GetFullTeacher(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTeacher", ReplyAction="http://tempuri.org/IUCSHService/GetFullTeacherResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullTeacherAsync(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string AuthenticationID, string AuthenticationKey, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullMonthlyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullMonthlyAttadanceScheduleResponse")]
        System.Data.DataTable GetFullMonthlyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullMonthlyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullMonthlyAttadanceScheduleResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullMonthlyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullYearlyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullYearlyAttadanceScheduleResponse")]
        System.Data.DataTable GetFullYearlyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullYearlyAttadanceSchedule", ReplyAction="http://tempuri.org/IUCSHService/GetFullYearlyAttadanceScheduleResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullYearlyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullRequestedList", ReplyAction="http://tempuri.org/IUCSHService/GetFullRequestedListResponse")]
        System.Data.DataTable GetFullRequestedList(string RequestByIP, string AuthenticationCode, string RequestedListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string StudentLoginID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullRequestedList", ReplyAction="http://tempuri.org/IUCSHService/GetFullRequestedListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullRequestedListAsync(string RequestByIP, string AuthenticationCode, string RequestedListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string StudentLoginID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/GetFullUnabilableApproveListResponse")]
        System.Data.DataTable GetFullUnabilableApproveList(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string StudentID, string DailyAttadanceScheduleID, string Approved, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullUnabilableApproveList", ReplyAction="http://tempuri.org/IUCSHService/GetFullUnabilableApproveListResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string StudentID, string DailyAttadanceScheduleID, string Approved, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/GetFullTimeTableObjectResponse")]
        System.Data.DataTable GetFullTimeTableObject(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUCSHService/GetFullTimeTableObject", ReplyAction="http://tempuri.org/IUCSHService/GetFullTimeTableObjectResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetFullTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUCSHServiceChannel : UCSHWebSupport.UCSHService.IUCSHService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UCSHServiceClient : System.ServiceModel.ClientBase<UCSHWebSupport.UCSHService.IUCSHService>, UCSHWebSupport.UCSHService.IUCSHService {
        
        public UCSHServiceClient() {
        }
        
        public UCSHServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UCSHServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UCSHServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UCSHServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public UCSHWebSupport.UCSHService.AuditLog[] GetAuditLog(string RequestByIP, string AuthenticationCode, string AuditLogID, string TableName, string ColumnName, string AffectedID, string RequestedUser) {
            return base.Channel.GetAuditLog(RequestByIP, AuthenticationCode, AuditLogID, TableName, ColumnName, AffectedID, RequestedUser);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.AuditLog[]> GetAuditLogAsync(string RequestByIP, string AuthenticationCode, string AuditLogID, string TableName, string ColumnName, string AffectedID, string RequestedUser) {
            return base.Channel.GetAuditLogAsync(RequestByIP, AuthenticationCode, AuditLogID, TableName, ColumnName, AffectedID, RequestedUser);
        }
        
        public UCSHWebSupport.UCSHService.ApproveType[] GetApproveType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetApproveType(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.ApproveType[]> GetApproveTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetApproveTypeAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Major[] GetMajor(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetMajor(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Major[]> GetMajorAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetMajorAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Semester[] GetSemester(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetSemester(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Semester[]> GetSemesterAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetSemesterAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.AttendanceStatus[] GetAttendanceStatus(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetAttendanceStatus(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.AttendanceStatus[]> GetAttendanceStatusAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetAttendanceStatusAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Authentication[] GetAuthentication(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string MinSuccessCount, string MaxSuccessCount, string MinErrorCount, string MaxErrorCount, string Active) {
            return base.Channel.GetAuthentication(RequestByIP, AuthenticationCode, ID, AuthenticationKey, MinSuccessCount, MaxSuccessCount, MinErrorCount, MaxErrorCount, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Authentication[]> GetAuthenticationAsync(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string MinSuccessCount, string MaxSuccessCount, string MinErrorCount, string MaxErrorCount, string Active) {
            return base.Channel.GetAuthenticationAsync(RequestByIP, AuthenticationCode, ID, AuthenticationKey, MinSuccessCount, MaxSuccessCount, MinErrorCount, MaxErrorCount, Active);
        }
        
        public UCSHWebSupport.UCSHService.Class[] GetClass(string RequestByIP, string AuthenticationCode, string ID, string Name, string MajorID, string YearID, string Active) {
            return base.Channel.GetClass(RequestByIP, AuthenticationCode, ID, Name, MajorID, YearID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Class[]> GetClassAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string MajorID, string YearID, string Active) {
            return base.Channel.GetClassAsync(RequestByIP, AuthenticationCode, ID, Name, MajorID, YearID, Active);
        }
        
        public UCSHWebSupport.UCSHService.DailyAttadanceSchedule[] GetDailyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active) {
            return base.Channel.GetDailyAttadance(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.DailyAttadanceSchedule[]> GetDailyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active) {
            return base.Channel.GetDailyAttadanceAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, Active);
        }
        
        public UCSHWebSupport.UCSHService.DayInWeek[] GetDayInWeek(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDayInWeek(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.DayInWeek[]> GetDayInWeekAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDayInWeekAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Department[] GetDepartment(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDepartment(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Department[]> GetDepartmentAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDepartmentAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Division[] GetDivision(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDivision(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Division[]> GetDivisionAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetDivisionAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.HolidayType[] GetHolidayType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetHolidayType(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.HolidayType[]> GetHolidayTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetHolidayTypeAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.HolidaySchedule[] GetHolidaySchedule(string RequestByIP, string AuthenticationCode, string ID, string Name, string TypeID, string FromDateTime, string ToDateTime, string Active) {
            return base.Channel.GetHolidaySchedule(RequestByIP, AuthenticationCode, ID, Name, TypeID, FromDateTime, ToDateTime, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.HolidaySchedule[]> GetHolidayScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string TypeID, string FromDateTime, string ToDateTime, string Active) {
            return base.Channel.GetHolidayScheduleAsync(RequestByIP, AuthenticationCode, ID, Name, TypeID, FromDateTime, ToDateTime, Active);
        }
        
        public UCSHWebSupport.UCSHService.Member[] GetMember(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string Email, string AuthenticationID, string MemberRoleID, string Active) {
            return base.Channel.GetMember(RequestByIP, AuthenticationCode, ID, LoginID, Password, FullName, Email, AuthenticationID, MemberRoleID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Member[]> GetMemberAsync(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string Email, string AuthenticationID, string MemberRoleID, string Active) {
            return base.Channel.GetMemberAsync(RequestByIP, AuthenticationCode, ID, LoginID, Password, FullName, Email, AuthenticationID, MemberRoleID, Active);
        }
        
        public UCSHWebSupport.UCSHService.MemberPermission[] GetMemberPermission(string RequestByIP, string AuthenticationCode, string ID, string MemberRoleID, string PermissionMasterID, string Allowed, string Active) {
            return base.Channel.GetMemberPermission(RequestByIP, AuthenticationCode, ID, MemberRoleID, PermissionMasterID, Allowed, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MemberPermission[]> GetMemberPermissionAsync(string RequestByIP, string AuthenticationCode, string ID, string MemberRoleID, string PermissionMasterID, string Allowed, string Active) {
            return base.Channel.GetMemberPermissionAsync(RequestByIP, AuthenticationCode, ID, MemberRoleID, PermissionMasterID, Allowed, Active);
        }
        
        public UCSHWebSupport.UCSHService.MemberRole[] GetMemberRole(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetMemberRole(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MemberRole[]> GetMemberRoleAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetMemberRoleAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.MonthlyAttadanceSchedule[] GetMonthlyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetMonthlyAttadance(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.MonthlyAttadanceSchedule[]> GetMonthlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetMonthlyAttadanceAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public UCSHWebSupport.UCSHService.PermissionMaster[] GetPermissionMaster(string RequestByIP, string AuthenticationCode, string ID, string Name, string Value, string ParentID, string Active) {
            return base.Channel.GetPermissionMaster(RequestByIP, AuthenticationCode, ID, Name, Value, ParentID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.PermissionMaster[]> GetPermissionMasterAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Value, string ParentID, string Active) {
            return base.Channel.GetPermissionMasterAsync(RequestByIP, AuthenticationCode, ID, Name, Value, ParentID, Active);
        }
        
        public UCSHWebSupport.UCSHService.RequestList[] GetRequestList(string RequestByIP, string AuthenticationCode, string ID, string RequestByHostName, string MachineKey, string MACAddrress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active) {
            return base.Channel.GetRequestList(RequestByIP, AuthenticationCode, ID, RequestByHostName, MachineKey, MACAddrress, StudentID, MemberID, LastRequestedDateTime, RequestedCount, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.RequestList[]> GetRequestListAsync(string RequestByIP, string AuthenticationCode, string ID, string RequestByHostName, string MachineKey, string MACAddrress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active) {
            return base.Channel.GetRequestListAsync(RequestByIP, AuthenticationCode, ID, RequestByHostName, MachineKey, MACAddrress, StudentID, MemberID, LastRequestedDateTime, RequestedCount, Active);
        }
        
        public UCSHWebSupport.UCSHService.Room[] GetRoom(string RequestByIP, string AuthenticationCode, string ID, string Name, string Code, string AccessRightCode, string North_Lattitude, string North_Longtitude, string South_Lattitude, string South_Longtitude, string East_Lattitude, string East_Longtitude, string West_Lattitude, string West_Longtitude, string Active) {
            return base.Channel.GetRoom(RequestByIP, AuthenticationCode, ID, Name, Code, AccessRightCode, North_Lattitude, North_Longtitude, South_Lattitude, South_Longtitude, East_Lattitude, East_Longtitude, West_Lattitude, West_Longtitude, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Room[]> GetRoomAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Code, string AccessRightCode, string North_Lattitude, string North_Longtitude, string South_Lattitude, string South_Longtitude, string East_Lattitude, string East_Longtitude, string West_Lattitude, string West_Longtitude, string Active) {
            return base.Channel.GetRoomAsync(RequestByIP, AuthenticationCode, ID, Name, Code, AccessRightCode, North_Lattitude, North_Longtitude, South_Lattitude, South_Longtitude, East_Lattitude, East_Longtitude, West_Lattitude, West_Longtitude, Active);
        }
        
        public UCSHWebSupport.UCSHService.ServiceAccessRight[] GetServiceAccessRight(string RequestByIP, string AuthenticationCode, string ID, string Password, string PermissionLevel, string RoomID, string Active) {
            return base.Channel.GetServiceAccessRight(RequestByIP, AuthenticationCode, ID, Password, PermissionLevel, RoomID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.ServiceAccessRight[]> GetServiceAccessRightAsync(string RequestByIP, string AuthenticationCode, string ID, string Password, string PermissionLevel, string RoomID, string Active) {
            return base.Channel.GetServiceAccessRightAsync(RequestByIP, AuthenticationCode, ID, Password, PermissionLevel, RoomID, Active);
        }
        
        public UCSHWebSupport.UCSHService.Student[] GetStudent(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string StudentCode, string Email, string MajorID, string AuthenticationID, string ClassID, string Active) {
            return base.Channel.GetStudent(RequestByIP, AuthenticationCode, ID, LoginID, Password, FullName, StudentCode, Email, MajorID, AuthenticationID, ClassID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Student[]> GetStudentAsync(string RequestByIP, string AuthenticationCode, string ID, string LoginID, string Password, string FullName, string StudentCode, string Email, string MajorID, string AuthenticationID, string ClassID, string Active) {
            return base.Channel.GetStudentAsync(RequestByIP, AuthenticationCode, ID, LoginID, Password, FullName, StudentCode, Email, MajorID, AuthenticationID, ClassID, Active);
        }
        
        public UCSHWebSupport.UCSHService.Subject[] GetSubject(string RequestByIP, string AuthenticationCode, string ID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active) {
            return base.Channel.GetSubject(RequestByIP, AuthenticationCode, ID, Name, SubjectCode, SubjectTypeID, SemesterID, MajorID, YearsID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Subject[]> GetSubjectAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active) {
            return base.Channel.GetSubjectAsync(RequestByIP, AuthenticationCode, ID, Name, SubjectCode, SubjectTypeID, SemesterID, MajorID, YearsID, Active);
        }
        
        public UCSHWebSupport.UCSHService.SubjectType[] GetSubjectType(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetSubjectType(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.SubjectType[]> GetSubjectTypeAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetSubjectTypeAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public UCSHWebSupport.UCSHService.Teacher[] GetTeacher(string RequestByIP, string AuthenticationCode, string ID, string Name, string DepartmentID, string Email, string AuthenticateID, string Active) {
            return base.Channel.GetTeacher(RequestByIP, AuthenticationCode, ID, Name, DepartmentID, Email, AuthenticateID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Teacher[]> GetTeacherAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string DepartmentID, string Email, string AuthenticateID, string Active) {
            return base.Channel.GetTeacherAsync(RequestByIP, AuthenticationCode, ID, Name, DepartmentID, Email, AuthenticateID, Active);
        }
        
        public UCSHWebSupport.UCSHService.TimePeriod[] GetTimePeriod(string RequestByIP, string AuthenticationCode, string ID, string Name, string FromTime, string ToTime, string Active) {
            return base.Channel.GetTimePeriod(RequestByIP, AuthenticationCode, ID, Name, FromTime, ToTime, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.TimePeriod[]> GetTimePeriodAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string FromTime, string ToTime, string Active) {
            return base.Channel.GetTimePeriodAsync(RequestByIP, AuthenticationCode, ID, Name, FromTime, ToTime, Active);
        }
        
        public UCSHWebSupport.UCSHService.TimeTableObject[] GetTimeTableObject(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active) {
            return base.Channel.GetTimeTableObject(RequestByIP, AuthenticationCode, ID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.TimeTableObject[]> GetTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active) {
            return base.Channel.GetTimeTableObjectAsync(RequestByIP, AuthenticationCode, ID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Active);
        }
        
        public UCSHWebSupport.UCSHService.Township[] GetTownship(string RequestByIP, string AuthenticationCode, string ID, string Name, string DivisionID, string Active) {
            return base.Channel.GetTownship(RequestByIP, AuthenticationCode, ID, Name, DivisionID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Township[]> GetTownshipAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string DivisionID, string Active) {
            return base.Channel.GetTownshipAsync(RequestByIP, AuthenticationCode, ID, Name, DivisionID, Active);
        }
        
        public UCSHWebSupport.UCSHService.UnabilableApproveList[] GetUnabilableApproveList(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Approved, string Active) {
            return base.Channel.GetUnabilableApproveList(RequestByIP, AuthenticationCode, ID, AttDateTime, RequestListID, DailyAttadanceScheduleID, Approved, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.UnabilableApproveList[]> GetUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Approved, string Active) {
            return base.Channel.GetUnabilableApproveListAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, RequestListID, DailyAttadanceScheduleID, Approved, Active);
        }
        
        public UCSHWebSupport.UCSHService.University[] GetUniversity(string RequestByIP, string AuthenticationCode, string ID, string Name, string TownshipID, string Active) {
            return base.Channel.GetUniversity(RequestByIP, AuthenticationCode, ID, Name, TownshipID, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.University[]> GetUniversityAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string TownshipID, string Active) {
            return base.Channel.GetUniversityAsync(RequestByIP, AuthenticationCode, ID, Name, TownshipID, Active);
        }
        
        public UCSHWebSupport.UCSHService.YearlyAttadanceSchedule[] GetYearlyAttadance(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetYearlyAttadance(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.YearlyAttadanceSchedule[]> GetYearlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetYearlyAttadanceAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public UCSHWebSupport.UCSHService.Years[] GetYears(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetYears(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public System.Threading.Tasks.Task<UCSHWebSupport.UCSHService.Years[]> GetYearsAsync(string RequestByIP, string AuthenticationCode, string ID, string Name, string Active) {
            return base.Channel.GetYearsAsync(RequestByIP, AuthenticationCode, ID, Name, Active);
        }
        
        public bool WriteDivision(string RequestByIP, string AuthenticationCode, string DivisionID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDivision(RequestByIP, AuthenticationCode, DivisionID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteDivisionAsync(string RequestByIP, string AuthenticationCode, string DivisionID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDivisionAsync(RequestByIP, AuthenticationCode, DivisionID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteMajor(string RequestByIP, string AuthenticationCode, string MajorID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteMajor(RequestByIP, AuthenticationCode, MajorID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteMajorAsync(string RequestByIP, string AuthenticationCode, string MajorID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteMajorAsync(RequestByIP, AuthenticationCode, MajorID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteMemberRole(string RequestByIP, string AuthenticationCode, string MemberRoleID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteMemberRole(RequestByIP, AuthenticationCode, MemberRoleID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteMemberRoleAsync(string RequestByIP, string AuthenticationCode, string MemberRoleID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteMemberRoleAsync(RequestByIP, AuthenticationCode, MemberRoleID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteMember(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ImageLocation, string ContactInfo, string Email, string AuthenticationID, string MemberRoleID, string ModifiedBy, string Active) {
            return base.Channel.WriteMember(RequestByIP, AuthenticationCode, MemberID, LoginID, Password, FullName, ImageLocation, ContactInfo, Email, AuthenticationID, MemberRoleID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteMemberAsync(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ImageLocation, string ContactInfo, string Email, string AuthenticationID, string MemberRoleID, string ModifiedBy, string Active) {
            return base.Channel.WriteMemberAsync(RequestByIP, AuthenticationCode, MemberID, LoginID, Password, FullName, ImageLocation, ContactInfo, Email, AuthenticationID, MemberRoleID, ModifiedBy, Active);
        }
        
        public bool WriteMemberPermission(string RequestByIP, string AuthenticationCode, string MemberPermissionID, string MemberRoleID, string PermissionMasterID, string PermissionName, string Allowed, string ModifiedBy, string Active) {
            return base.Channel.WriteMemberPermission(RequestByIP, AuthenticationCode, MemberPermissionID, MemberRoleID, PermissionMasterID, PermissionName, Allowed, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteMemberPermissionAsync(string RequestByIP, string AuthenticationCode, string MemberPermissionID, string MemberRoleID, string PermissionMasterID, string PermissionName, string Allowed, string ModifiedBy, string Active) {
            return base.Channel.WriteMemberPermissionAsync(RequestByIP, AuthenticationCode, MemberPermissionID, MemberRoleID, PermissionMasterID, PermissionName, Allowed, ModifiedBy, Active);
        }
        
        public bool WriteApproveType(string RequestByIP, string AuthenticationCode, string ApproveTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteApproveType(RequestByIP, AuthenticationCode, ApproveTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteApproveTypeAsync(string RequestByIP, string AuthenticationCode, string ApproveTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteApproveTypeAsync(RequestByIP, AuthenticationCode, ApproveTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteAttendanceStatus(string RequestByIP, string AuthenticationCode, string AttendanceStatusID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteAttendanceStatus(RequestByIP, AuthenticationCode, AttendanceStatusID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteAttendanceStatusAsync(string RequestByIP, string AuthenticationCode, string AttendanceStatusID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteAttendanceStatusAsync(RequestByIP, AuthenticationCode, AttendanceStatusID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteAuthentication(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string SuccessCount, string ErrorCount, string Active) {
            return base.Channel.WriteAuthentication(RequestByIP, AuthenticationCode, ID, AuthenticationKey, SuccessCount, ErrorCount, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteAuthenticationAsync(string RequestByIP, string AuthenticationCode, string ID, string AuthenticationKey, string SuccessCount, string ErrorCount, string Active) {
            return base.Channel.WriteAuthenticationAsync(RequestByIP, AuthenticationCode, ID, AuthenticationKey, SuccessCount, ErrorCount, Active);
        }
        
        public bool WriteClass(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearID, string ModifiedBy, string Active) {
            return base.Channel.WriteClass(RequestByIP, AuthenticationCode, ClassID, Name, Description, MajorID, YearID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteClassAsync(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearID, string ModifiedBy, string Active) {
            return base.Channel.WriteClassAsync(RequestByIP, AuthenticationCode, ClassID, Name, Description, MajorID, YearID, ModifiedBy, Active);
        }
        
        public bool WriteDailyAttadance(string RequestByIP, string AuthenticationCode, string DailyAttadanceID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string ModifiedBy, string Active) {
            return base.Channel.WriteDailyAttadance(RequestByIP, AuthenticationCode, DailyAttadanceID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteDailyAttadanceAsync(string RequestByIP, string AuthenticationCode, string DailyAttadanceID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string ModifiedBy, string Active) {
            return base.Channel.WriteDailyAttadanceAsync(RequestByIP, AuthenticationCode, DailyAttadanceID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, ModifiedBy, Active);
        }
        
        public bool WriteDayInWeek(string RequestByIP, string AuthenticationCode, string DayInWeekID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDayInWeek(RequestByIP, AuthenticationCode, DayInWeekID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteDayInWeekAsync(string RequestByIP, string AuthenticationCode, string DayInWeekID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDayInWeekAsync(RequestByIP, AuthenticationCode, DayInWeekID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteDepartment(string RequestByIP, string AuthenticationCode, string DepartmentID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDepartment(RequestByIP, AuthenticationCode, DepartmentID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteDepartmentAsync(string RequestByIP, string AuthenticationCode, string DepartmentID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteDepartmentAsync(RequestByIP, AuthenticationCode, DepartmentID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteHolidayType(string RequestByIP, string AuthenticationCode, string HolidayTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteHolidayType(RequestByIP, AuthenticationCode, HolidayTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteHolidayTypeAsync(string RequestByIP, string AuthenticationCode, string HolidayTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteHolidayTypeAsync(RequestByIP, AuthenticationCode, HolidayTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteMonthlyAttadance(string RequestByIP, string AuthenticationCode, string MonthlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active) {
            return base.Channel.WriteMonthlyAttadance(RequestByIP, AuthenticationCode, MonthlyAttadanceID, AttDateTime, StudentID, SemesterID, CurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Description, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteMonthlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string MonthlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active) {
            return base.Channel.WriteMonthlyAttadanceAsync(RequestByIP, AuthenticationCode, MonthlyAttadanceID, AttDateTime, StudentID, SemesterID, CurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Description, Active);
        }
        
        public bool WritePermissionMaster(string RequestByIP, string AuthenticationCode, string PermissionMasterID, string Name, string Value, string ParentID, string ModifiedBy, string Active) {
            return base.Channel.WritePermissionMaster(RequestByIP, AuthenticationCode, PermissionMasterID, Name, Value, ParentID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WritePermissionMasterAsync(string RequestByIP, string AuthenticationCode, string PermissionMasterID, string Name, string Value, string ParentID, string ModifiedBy, string Active) {
            return base.Channel.WritePermissionMasterAsync(RequestByIP, AuthenticationCode, PermissionMasterID, Name, Value, ParentID, ModifiedBy, Active);
        }
        
        public bool WriteRequestList(string RequestByIP, string AuthenticationCode, string RequestListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Description, string Active) {
            return base.Channel.WriteRequestList(RequestByIP, AuthenticationCode, RequestListID, RequestByHostName, MachineKey, MACAddress, StudentID, MemberID, LastRequestedDateTime, RequestedCount, Description, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteRequestListAsync(string RequestByIP, string AuthenticationCode, string RequestListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Description, string Active) {
            return base.Channel.WriteRequestListAsync(RequestByIP, AuthenticationCode, RequestListID, RequestByHostName, MachineKey, MACAddress, StudentID, MemberID, LastRequestedDateTime, RequestedCount, Description, Active);
        }
        
        public bool WriteRoom(
                    string RequestByIP, 
                    string AuthenticationCode, 
                    string RoomID, 
                    string Name, 
                    string RoomCode, 
                    string AccessRightCode, 
                    string North_Lattitude, 
                    string North_Longtitude, 
                    string South_Lattitude, 
                    string South_Longtitude, 
                    string East_Lattitude, 
                    string East_Longtitude, 
                    string West_Lattitude, 
                    string West_Longtitude, 
                    string Description, 
                    string ModifiedBy, 
                    string Active) {
            return base.Channel.WriteRoom(RequestByIP, AuthenticationCode, RoomID, Name, RoomCode, AccessRightCode, North_Lattitude, North_Longtitude, South_Lattitude, South_Longtitude, East_Lattitude, East_Longtitude, West_Lattitude, West_Longtitude, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteRoomAsync(
                    string RequestByIP, 
                    string AuthenticationCode, 
                    string RoomID, 
                    string Name, 
                    string RoomCode, 
                    string AccessRightCode, 
                    string North_Lattitude, 
                    string North_Longtitude, 
                    string South_Lattitude, 
                    string South_Longtitude, 
                    string East_Lattitude, 
                    string East_Longtitude, 
                    string West_Lattitude, 
                    string West_Longtitude, 
                    string Description, 
                    string ModifiedBy, 
                    string Active) {
            return base.Channel.WriteRoomAsync(RequestByIP, AuthenticationCode, RoomID, Name, RoomCode, AccessRightCode, North_Lattitude, North_Longtitude, South_Lattitude, South_Longtitude, East_Lattitude, East_Longtitude, West_Lattitude, West_Longtitude, Description, ModifiedBy, Active);
        }
        
        public bool WriteStudent(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string StudentCode, string ImageLocation, string Email, string MajorID, string ContactInfo, string AuthenticationID, string ClassID, string ModifiedBy, string Active) {
            return base.Channel.WriteStudent(RequestByIP, AuthenticationCode, StudentID, LoginID, Password, FullName, StudentCode, ImageLocation, Email, MajorID, ContactInfo, AuthenticationID, ClassID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteStudentAsync(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string StudentCode, string ImageLocation, string Email, string MajorID, string ContactInfo, string AuthenticationID, string ClassID, string ModifiedBy, string Active) {
            return base.Channel.WriteStudentAsync(RequestByIP, AuthenticationCode, StudentID, LoginID, Password, FullName, StudentCode, ImageLocation, Email, MajorID, ContactInfo, AuthenticationID, ClassID, ModifiedBy, Active);
        }
        
        public bool WriteSubject(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string MajorID, string SemesterID, string YearsID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteSubject(RequestByIP, AuthenticationCode, SubjectID, Name, SubjectCode, SubjectTypeID, MajorID, SemesterID, YearsID, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteSubjectAsync(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string MajorID, string SemesterID, string YearsID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteSubjectAsync(RequestByIP, AuthenticationCode, SubjectID, Name, SubjectCode, SubjectTypeID, MajorID, SemesterID, YearsID, Description, ModifiedBy, Active);
        }
        
        public bool WriteSubjectType(string RequestByIP, string AuthenticationCode, string SubjectTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteSubjectType(RequestByIP, AuthenticationCode, SubjectTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteSubjectTypeAsync(string RequestByIP, string AuthenticationCode, string SubjectTypeID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteSubjectTypeAsync(RequestByIP, AuthenticationCode, SubjectTypeID, Name, Description, ModifiedBy, Active);
        }
        
        public bool WriteTeacher(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string Email, string AuthenticateID, string ModifiedBy, string Active) {
            return base.Channel.WriteTeacher(RequestByIP, AuthenticationCode, TeacherID, Name, DepartmentID, Email, AuthenticateID, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteTeacherAsync(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string Email, string AuthenticateID, string ModifiedBy, string Active) {
            return base.Channel.WriteTeacherAsync(RequestByIP, AuthenticationCode, TeacherID, Name, DepartmentID, Email, AuthenticateID, ModifiedBy, Active);
        }
        
        public bool WriteTimePeriod(string RequestByIP, string AuthenticationCode, string TimePeriodID, string Name, string FromTime, string ToTime, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTimePeriod(RequestByIP, AuthenticationCode, TimePeriodID, Name, FromTime, ToTime, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteTimePeriodAsync(string RequestByIP, string AuthenticationCode, string TimePeriodID, string Name, string FromTime, string ToTime, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTimePeriodAsync(RequestByIP, AuthenticationCode, TimePeriodID, Name, FromTime, ToTime, Description, ModifiedBy, Active);
        }
        
        public bool WriteTimeTableObject(string RequestByIP, string AuthenticationCode, string TimeTableObjectID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTimeTableObject(RequestByIP, AuthenticationCode, TimeTableObjectID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string TimeTableObjectID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTimeTableObjectAsync(RequestByIP, AuthenticationCode, TimeTableObjectID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Description, ModifiedBy, Active);
        }
        
        public bool WriteTownship(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string DivisionID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTownship(RequestByIP, AuthenticationCode, TownshipID, Name, DivisionID, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteTownshipAsync(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string DivisionID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteTownshipAsync(RequestByIP, AuthenticationCode, TownshipID, Name, DivisionID, Description, ModifiedBy, Active);
        }
        
        public bool WriteUnabilableApproveList(string RequestByIP, string AuthenticationCode, string UnabilableApproveListID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteUnabilableApproveList(RequestByIP, AuthenticationCode, UnabilableApproveListID, AttDateTime, RequestListID, DailyAttadanceScheduleID, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string UnabilableApproveListID, string AttDateTime, string RequestListID, string DailyAttadanceScheduleID, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteUnabilableApproveListAsync(RequestByIP, AuthenticationCode, UnabilableApproveListID, AttDateTime, RequestListID, DailyAttadanceScheduleID, Description, ModifiedBy, Active);
        }
        
        public bool WriteYearlyAttadance(string RequestByIP, string AuthenticationCode, string YearlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active) {
            return base.Channel.WriteYearlyAttadance(RequestByIP, AuthenticationCode, YearlyAttadanceID, AttDateTime, StudentID, SemesterID, CurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Description, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteYearlyAttadanceAsync(string RequestByIP, string AuthenticationCode, string YearlyAttadanceID, string AttDateTime, string StudentID, string SemesterID, string CurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Description, string Active) {
            return base.Channel.WriteYearlyAttadanceAsync(RequestByIP, AuthenticationCode, YearlyAttadanceID, AttDateTime, StudentID, SemesterID, CurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Description, Active);
        }
        
        public bool WriteYear(string RequestByIP, string AuthenticationCode, string YearID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteYear(RequestByIP, AuthenticationCode, YearID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Threading.Tasks.Task<bool> WriteYearAsync(string RequestByIP, string AuthenticationCode, string YearID, string Name, string Description, string ModifiedBy, string Active) {
            return base.Channel.WriteYearAsync(RequestByIP, AuthenticationCode, YearID, Name, Description, ModifiedBy, Active);
        }
        
        public System.Data.DataTable GetFullTownship(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string Description, string DivisionID, string DivisionName, string Active) {
            return base.Channel.GetFullTownship(RequestByIP, AuthenticationCode, TownshipID, Name, Description, DivisionID, DivisionName, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullTownshipAsync(string RequestByIP, string AuthenticationCode, string TownshipID, string Name, string Description, string DivisionID, string DivisionName, string Active) {
            return base.Channel.GetFullTownshipAsync(RequestByIP, AuthenticationCode, TownshipID, Name, Description, DivisionID, DivisionName, Active);
        }
        
        public System.Data.DataTable GetFullClass(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearsID, string YearsName, string Active) {
            return base.Channel.GetFullClass(RequestByIP, AuthenticationCode, ClassID, Name, Description, MajorID, YearsID, YearsName, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullClassAsync(string RequestByIP, string AuthenticationCode, string ClassID, string Name, string Description, string MajorID, string YearsID, string YearsName, string Active) {
            return base.Channel.GetFullClassAsync(RequestByIP, AuthenticationCode, ClassID, Name, Description, MajorID, YearsID, YearsName, Active);
        }
        
        public System.Data.DataTable GetFullHolidaySchedule(string RequestByIP, string AuthenticationCode, string HolidayScheduleID, string Name, string FromTime, string ToTime, string HolidayTypeID, string HolidayTypeName, string Active) {
            return base.Channel.GetFullHolidaySchedule(RequestByIP, AuthenticationCode, HolidayScheduleID, Name, FromTime, ToTime, HolidayTypeID, HolidayTypeName, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullHolidayScheduleAsync(string RequestByIP, string AuthenticationCode, string HolidayScheduleID, string Name, string FromTime, string ToTime, string HolidayTypeID, string HolidayTypeName, string Active) {
            return base.Channel.GetFullHolidayScheduleAsync(RequestByIP, AuthenticationCode, HolidayScheduleID, Name, FromTime, ToTime, HolidayTypeID, HolidayTypeName, Active);
        }
        
        public System.Data.DataTable GetFullDailyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active) {
            return base.Channel.GetFullDailyAttadanceSchedule(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullDailyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string TimeTableObjectID, string SemesterID, string AttendanceStatusID, string Active) {
            return base.Channel.GetFullDailyAttadanceScheduleAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, TimeTableObjectID, SemesterID, AttendanceStatusID, Active);
        }
        
        public System.Data.DataTable GetFullMember(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ContactInfo, string MemberRoleID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullMember(RequestByIP, AuthenticationCode, MemberID, LoginID, Password, FullName, ContactInfo, MemberRoleID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullMemberAsync(string RequestByIP, string AuthenticationCode, string MemberID, string LoginID, string Password, string FullName, string ContactInfo, string MemberRoleID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullMemberAsync(RequestByIP, AuthenticationCode, MemberID, LoginID, Password, FullName, ContactInfo, MemberRoleID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Data.DataTable GetFullStudent(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string MajorID, string ContactInfo, string ClassID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullStudent(RequestByIP, AuthenticationCode, StudentID, LoginID, Password, FullName, MajorID, ContactInfo, ClassID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullStudentAsync(string RequestByIP, string AuthenticationCode, string StudentID, string LoginID, string Password, string FullName, string MajorID, string ContactInfo, string ClassID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullStudentAsync(RequestByIP, AuthenticationCode, StudentID, LoginID, Password, FullName, MajorID, ContactInfo, ClassID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Data.DataTable GetFullSubject(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active) {
            return base.Channel.GetFullSubject(RequestByIP, AuthenticationCode, SubjectID, Name, SubjectCode, SubjectTypeID, SemesterID, MajorID, YearsID, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullSubjectAsync(string RequestByIP, string AuthenticationCode, string SubjectID, string Name, string SubjectCode, string SubjectTypeID, string SemesterID, string MajorID, string YearsID, string Active) {
            return base.Channel.GetFullSubjectAsync(RequestByIP, AuthenticationCode, SubjectID, Name, SubjectCode, SubjectTypeID, SemesterID, MajorID, YearsID, Active);
        }
        
        public System.Data.DataTable GetFullTeacher(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullTeacher(RequestByIP, AuthenticationCode, TeacherID, Name, DepartmentID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullTeacherAsync(string RequestByIP, string AuthenticationCode, string TeacherID, string Name, string DepartmentID, string AuthenticationID, string AuthenticationKey, string Active) {
            return base.Channel.GetFullTeacherAsync(RequestByIP, AuthenticationCode, TeacherID, Name, DepartmentID, AuthenticationID, AuthenticationKey, Active);
        }
        
        public System.Data.DataTable GetFullMonthlyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetFullMonthlyAttadanceSchedule(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, StudentLoginID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullMonthlyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetFullMonthlyAttadanceScheduleAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, StudentLoginID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Data.DataTable GetFullYearlyAttadanceSchedule(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetFullYearlyAttadanceSchedule(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, StudentLoginID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullYearlyAttadanceScheduleAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string StudentID, string StudentLoginID, string SemesterID, string MinCurrentAttandancePercent, string NumberOfAttandance, string NumberOfAbsent, string Active) {
            return base.Channel.GetFullYearlyAttadanceScheduleAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, StudentID, StudentLoginID, SemesterID, MinCurrentAttandancePercent, NumberOfAttandance, NumberOfAbsent, Active);
        }
        
        public System.Data.DataTable GetFullRequestedList(string RequestByIP, string AuthenticationCode, string RequestedListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string StudentLoginID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active) {
            return base.Channel.GetFullRequestedList(RequestByIP, AuthenticationCode, RequestedListID, RequestByHostName, MachineKey, MACAddress, StudentID, StudentLoginID, MemberID, LastRequestedDateTime, RequestedCount, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullRequestedListAsync(string RequestByIP, string AuthenticationCode, string RequestedListID, string RequestByHostName, string MachineKey, string MACAddress, string StudentID, string StudentLoginID, string MemberID, string LastRequestedDateTime, string RequestedCount, string Active) {
            return base.Channel.GetFullRequestedListAsync(RequestByIP, AuthenticationCode, RequestedListID, RequestByHostName, MachineKey, MACAddress, StudentID, StudentLoginID, MemberID, LastRequestedDateTime, RequestedCount, Active);
        }
        
        public System.Data.DataTable GetFullUnabilableApproveList(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string StudentID, string DailyAttadanceScheduleID, string Approved, string Active) {
            return base.Channel.GetFullUnabilableApproveList(RequestByIP, AuthenticationCode, ID, AttDateTime, RequestListID, StudentID, DailyAttadanceScheduleID, Approved, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullUnabilableApproveListAsync(string RequestByIP, string AuthenticationCode, string ID, string AttDateTime, string RequestListID, string StudentID, string DailyAttadanceScheduleID, string Approved, string Active) {
            return base.Channel.GetFullUnabilableApproveListAsync(RequestByIP, AuthenticationCode, ID, AttDateTime, RequestListID, StudentID, DailyAttadanceScheduleID, Approved, Active);
        }
        
        public System.Data.DataTable GetFullTimeTableObject(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active) {
            return base.Channel.GetFullTimeTableObject(RequestByIP, AuthenticationCode, ID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Active);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetFullTimeTableObjectAsync(string RequestByIP, string AuthenticationCode, string ID, string ClassID, string DayInWeekID, string TimePeriodID, string SubjectID, string TeacherID, string RoomID, string SemesterID, string Active) {
            return base.Channel.GetFullTimeTableObjectAsync(RequestByIP, AuthenticationCode, ID, ClassID, DayInWeekID, TimePeriodID, SubjectID, TeacherID, RoomID, SemesterID, Active);
        }
    }
}
